https://reactjs.org/docs/components-and-props.html


-----------------------------------------------------------------
TypeScript: Um conjunto de ferramentas que assegura que as variáveis do javascript não mudem de tipo (deixa 'fortemente tipado')

ex.: function x (n : string){n = 'Olá';} //dá certo
     function x (n : string){n = 1;} //dá errado

https://www.youtube.com/watch?v=kg2-SMolAV0
-----------------------------------------------------------------

-----------------------------------------------------------------
TIPOS DE VARIÁVEIS EM JAVASCRIPT:

var -> escopo global
let -> escopo de bloco
const -> escopo de bloco +
          precisa ser inicializada no momento da declaração
          não se pode alterar seu valor após declarada

HOISTING: Elevação/Içamento de variáveis -> As variáveis em js são 'levadas' ao topo do bloco quando o programa roda, ou seja, podem ser utilizadas antes da declaração. O tipo var é levado ao topo do código, o tipo let ao topo do bloco em que está inserido, mesma coisa com const.

https://www.alura.com.br/artigos/entenda-diferenca-entre-var-let-e-const-no-javascript?gclid=Cj0KCQjwyMiTBhDKARIsAAJ-9Vvjtd98JFLp3bANUM356eaS9RUOZaDAI2UEfNqxzhPuvRU_Myc7C3EaAuiOEALw_wcB

Strict mode: https://www.youtube.com/watch?v=-iiSEKTotyg
-----------------------------------------------------------------

-----------------------------------------------------------------
DECLARAÇÃO DE FUNÇÕES EM JAVASCRIPT:

var x = () => {return 1;}           //x é igual a uma função anônima
var x = (num) => return num;        //x é igual a uma função anônima com parâmetros
var x = (num) => return (num + 1);  //x é igual a uma função anônima com parâmetros
var x = function(){return 1;}       //x é igual a uma função anônima
function x(){return 1;}             //x é uma função.

Arrow functions: Ajudam a criar uma função mais rapidamente.
-----------------------------------------------------------------

-----------------------------------------------------------------
OBJETO EM JAVASCRIPT:

var x = {
     'nome': 'Pedro',
     'idade': getIdade(pedro),
};
(Um JSON é uma série de objetos de javascript)

https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Working_with_Objects
------------------------JSON----------------------------------
"fatura":[{"id": 123, 'tipo': "Cartão de crédito"},
        {"id": 456, "tipo": "Luz/Energia"}],

"etc": {...}, 
...

https://www.alura.com.br/artigos/o-que-e-json?gclid=Cj0KCQjwyMiTBhDKARIsAAJ-9VtFqifvPXDhq_agnTT7JHmOt3mhtJ3RCX-oKZRYuiTzOA0g--3604waAkHMEALw_wcB

------------------------/JSON---------------------------------

const fatura = // Criação do objeto fatura.
const faturaJSON = JSON.stringify(fatura); // Transforma o objeto literal em JSON.
const novamenteObjFatura = JSON.parse(faturaJSON); // Transforma o JSON em objeto literal.
-----------------------------------------------------------------